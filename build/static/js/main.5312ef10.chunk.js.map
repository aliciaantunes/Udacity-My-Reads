{"version":3,"sources":["BooksAPI.js","components/common/Book.jsx","components/common/BookShelf.jsx","components/Pages/BookList.jsx","components/Pages/BookSearch.jsx","components/common/Loading.jsx","components/App.jsx","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Book","book","onChangeShelf","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","e","shelf","target","value","disabled","title","authors","Bookshelf","books","changeBookShelf","map","id","defaultProps","BookList","myBooks","filterBooks","filter","to","BookSearch","useState","setBooks","searchParameter","setSearchParameter","searchBooks","debounce","search","query","maxResults","length","fetch","method","body","JSON","stringify","then","res","json","data","response","useEffect","type","placeholder","searchParam","unshelfed","forEach","myBook","Loading","App","setMyBooks","isLoading","setIsLoading","fetchBookList","BooksAPI","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5312ef10.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Book ({book, onChangeShelf}) {\r\n    const ChangeShelf = (e) => {\r\n        const shelf = e.target.value;\r\n        onChangeShelf(book, shelf);\r\n    }\r\n  \r\n  return (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n         <div\r\n            className=\"book-cover\"\r\n            style={{\r\n             width: 128,\r\n             height: 193,\r\n             backgroundImage:\r\n             `url(\"${book.imageLinks && book.imageLinks.thumbnail}\")`,\r\n            }}\r\n             ></div>\r\n            <div className=\"book-shelf-changer\">\r\n              <select onChange={ChangeShelf} value={book.shelf || 'none'}>\r\n                 <option value=\"none\" disabled>Move to...</option>\r\n                 <option value=\"currentlyReading\">Currently Reading</option>\r\n                 <option value=\"wantToRead\">Want to Read</option>\r\n                 <option value=\"read\">Read</option>\r\n                 <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n            </div>\r\n            <div className=\"book-title\">\r\n                {book.title}\r\n            </div>\r\n            <div className=\"book-authors\">\r\n                {book.authors}\r\n            </div>\r\n          </div>\r\n        </li>\r\n    );\r\n    }\r\n\r\n    Book.propTypes = {\r\n        book: PropTypes.objectOf(PropTypes.any).isRequired,\r\n        onChangeShelf: PropTypes.func.isRequired,\r\n    };\r\n\r\n    export default Book;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Book from './Book';\r\n\r\n\r\nfunction Bookshelf({books, title, changeBookShelf}) {\r\n\r\nreturn (\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">{title}</h2>\r\n          <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n               {books.map(book => ( \r\n                 <Book key={book.id} \r\n                 book={book} \r\n                 onChangeShelf={changeBookShelf} />\r\n                ))}\r\n              </ol>\r\n            </div>\r\n         </div>\r\n      );\r\n    }\r\n\r\n    Bookshelf.propTypes = {\r\n        books: PropTypes.arrayOf(PropTypes.any),\r\n        title: PropTypes.string,\r\n        changeBookShelf: PropTypes.func.isRequired,\r\n      };\r\n    \r\n      Bookshelf.defaultProps = {\r\n        books: [],\r\n        title: '',\r\n      };\r\n\r\n\r\n\r\nexport default Bookshelf;","import React from 'react';\nimport Bookshelf from '../common/BookShelf';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nfunction BookList({myBooks, changeBookShelf}){\n  \n    const filterBooks = (shelf) => {\n      return myBooks.filter(book => (book.shelf === shelf));\n  }\n     \n     return (\n        <div className=\"list-books\">\n           <div className=\"list-books-title\">\n             <h1>MyReads</h1>\n          </div>\n          <div className=\"list-books-content\">\n            <Bookshelf books={filterBooks('currentlyReading')} title= \"Currently Reading\" changeBookShelf={changeBookShelf} />\n            <Bookshelf books={filterBooks('wantToRead')} title=\"Want to Read\" changeBookShelf={changeBookShelf} />\n            <Bookshelf books={filterBooks('read')} title=\"Read\" changeBookShelf={changeBookShelf} />\n            <div className=\"open-search\">\n              <Link to=\"/search\">Add a book</Link>\n          </div>\n      </div>\n      </div>               \n     );\n   }\n\n   BookList.propTypes = {\n      myBooks: PropTypes.arrayOf(PropTypes.any),\n      changeBookShelf: PropTypes.func.isRequired,\n   }\n\n   BookList.defaultProps = {\n      myBooks: [],\n   }\n\nexport default BookList;","import React, {useState, useEffect} from 'react';\nimport { debounce } from 'throttle-debounce';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../../BooksAPI';\nimport Book from '../common/Book'\nimport PropTypes from 'prop-types';\n\n\nfunction BookSearch({myBooks, changeBookShelf}) {\n    const [books, setBooks] = useState([]);\n    const [searchParameter, setSearchParameter] = useState('');\n\n    const searchBooks = debounce(400, (search) => {\n      if (search.length > 0) {\n        BooksAPI.search(search, 10)\n          .then((response) => {\n            if (response.length > 0) {\n              setBooks(response);\n            } else {\n              setBooks([]);\n            }\n          });\n      } else {\n        setBooks([]); // Clear the search results when the search input is empty\n      }\n    });\n\n    const onSearchInputChange = (e) => {\n      const searchParam = e.target.value;\n      setSearchParameter(searchParam);\n      searchBooks(searchParam);\n    };\n\n    useEffect(() => {\n      return () => {\n        setBooks([]); \n      };\n    }, []);\n\n    const renderBooks = () => {\n      return books && books.map((unshelfed) => {\n        const book = { ...unshelfed};\n\n        myBooks.forEach((myBook) => {\n          if (book.id === myBook.id) {\n            book.shelf = myBook.shelf;\n          }\n        });\n\n        return (\n          <Book \n          key={book.id} \n          book={book} \n          onChangeShelf={changeBookShelf} />\n        );\n      });\n    }\n\n\n   return (\n    <div className='search-books'>\n      <div className='search-books-bar'>\n        <Link className='close-search' to=\"/\">\n          Close\n        </Link>\n        <div className='search-books-input-wrapper'>\n          <input \n            type='text' \n            placeholder='Search by title or author' \n            value={searchParameter} \n            onChange={onSearchInputChange}/>\n        </div>\n      </div>\n      <div className='search-books-results'>\n        <ol className='books-grid'>\n        {renderBooks()}\n        </ol>\n      </div>\n    </div>\n   );\n}\n\nBookSearch.propTypes = {\n  myBooks: PropTypes.arrayOf(PropTypes.any),\n  changeBookShelf: PropTypes.func.isRequired,\n}\n\nBookSearch.defaultProps = {\n  myBooks: [],\n}\n\nexport default BookSearch;","import React from \"react\";\r\nimport './Loading.css';\r\n\r\nconst Loading = () => (\r\n    <div className=\"overlay\">\r\n    <div className=\"lds-ripple\"><div></div></div>\r\n    </div>\r\n);\r\n\r\nexport default Loading;","import React, { useEffect, useState } from 'react';\n\nimport * as BooksAPI from '../BooksAPI';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\nimport BookList from './Pages/BookList';\nimport BookSearch from './Pages/BookSearch';\nimport Loading from './common/Loading';\n\nimport \"./App.css\";\n\n//state e props\nfunction App() {\n  const [myBooks, setMyBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n \nuseEffect(() => {\n  fetchBookList();\n}, []);\n\nconst fetchBookList = () => {\n  setIsLoading(true);\n  BooksAPI.getAll()\n    .then((books) => {\n      setMyBooks(books);\n      setIsLoading(false);\n    });\n};\n    \nconst changeBookShelf = (book, shelf) => {\n  BooksAPI.update(book, shelf).then(() => {\n    fetchBookList();\n  });\n};\n\nreturn (\n  <BrowserRouter>\n    <div className=\"app\">\n      {\n        isLoading && <Loading />\n      }\n      <div>\n        <Routes>\n          <Route exact path=\"/\" element={<BookList myBooks={myBooks} changeBookShelf={changeBookShelf} />}/>\n          <Route path='/search' element={<BookSearch myBooks={myBooks} changeBookShelf={changeBookShelf} />} />\n        </Routes>\n      </div>\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}